def zero = (U8) 0
zero
zero
(U8) 0
def one_two_three = [(U8) 1, (U8) 2, (U8) 3]
one_two_three
one_two_three
[(U8) 1, (U8) 2, (U8) 3]
def double = fn (x) { x * (U8) 2 }
double
double
fn (x) { x * (U8) 2 }
double((U8) 200)
(U16) 400
double(zero)
(U16) 0
def double_tuple = macro (x) do
  quote do
  x = ^ unquote(x)
  {x, x}
end
end
double_tuple
double_tuple
macro (x) do
  quote do
  x = ^ unquote(x)
  {x, x}
end
end
double_tuple((U8) 200)
{(U8) 200, (U8) 200}
double_tuple(zero)
{(U8) 0, (U8) 0}
double_tuple(one_two_three)
{[(U8) 1, (U8) 2, (U8) 3], [(U8) 1, (U8) 2, (U8) 3]}
def reverse = fn {
  (x) { reverse(x, []) }
  ([], acc) { acc }
  ([a | b], acc) { reverse(b, [a | acc]) }
}
reverse
reverse
fn {
  (x) { reverse(x, []) }
  ([], acc) { acc }
  ([a | b], acc) { reverse(b, [a | acc]) }
}
reverse([(U8) 1, (U8) 2, (U8) 3])
[(U8) 3, (U8) 2, (U8) 1]
def reverse = fn {
  (x) { reverse(x, []) }
  ([], acc) { [:reversed | acc] }
  ([a | b], acc) { reverse(b, [a | acc]) }
}
reverse
reverse
fn {
  (x) { reverse(x, []) }
  ([], acc) { [:reversed | acc] }
  ([a | b], acc) { reverse(b, [a | acc]) }
}
reverse([(U8) 1, (U8) 2, (U8) 3])
[:reversed, (U8) 3, (U8) 2, (U8) 1]
def reverse = fn {
  (x) { reverse(x, []) }
  ([], acc) { acc }
  ([a | b], acc) { reverse(b, [a | acc]) }
}
reverse
reverse
fn {
  (x) { reverse(x, []) }
  ([], acc) { acc }
  ([a | b], acc) { reverse(b, [a | acc]) }
}
reverse([(U8) 1, (U8) 2, (U8) 3])
[(U8) 3, (U8) 2, (U8) 1]
