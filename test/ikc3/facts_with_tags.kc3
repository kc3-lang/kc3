quote Facts.with_tags(Facts.env_db(), op = ?, :op_sym, sym = ?, fn (fact) {
  puts("#{inspect(sym)} #{inspect(op)}")
  2
})
Facts.with_tags(Facts.env_db(), op = ?, :op_sym, sym = ?, fn (fact) {
  puts("#{inspect(sym)} #{inspect(op)}")
  2
})
quote op = ? ; void
op = ? ; void
quote sym = ? ; void
sym = ? ; void
quote Facts.with_tags(Facts.env_db(), op, :op_sym, sym, fn (fact) {
  puts("#{inspect(sym)} #{inspect(op)}")
  3
})
Facts.with_tags(Facts.env_db(), op, :op_sym, sym, fn (fact) {
  puts("#{inspect(sym)} #{inspect(op)}")
  3
})
quote type(op)
type(op)
quote sym = :+
sym = :+
quote Facts.with_tags(Facts.env_db(), op = ?, :op_sym, sym, fn (fact) {
  puts("#{inspect(sym)} #{inspect(op)}")
  4
})
Facts.with_tags(Facts.env_db(), op = ?, :op_sym, sym, fn (fact) {
  puts("#{inspect(sym)} #{inspect(op)}")
  4
})
