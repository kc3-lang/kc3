quote %Fact{}
%Fact{}
quote db = Facts.database() ; void
db = Facts.database() ; void
quote Facts.add_tags(db, 1, 2, 3)
Facts.add_tags(db, 1, 2, 3)
quote Facts.add_tags(db, 4, 5, 6)
Facts.add_tags(db, 4, 5, 6)
quote Facts.with_tags(db, s = ?, p = ?, o = ?, fn (fact) { puts("#{s} #{p} #{o}"); :ok })
Facts.with_tags(db, s = ?, p = ?, o = ?, fn (fact) { puts("#{s} #{p} #{o}"); :ok })
quote Facts.add_tags(db, 7, 8, 9)
Facts.add_tags(db, 7, 8, 9)
quote Facts.with_tags(db, s = ?, p = ?, o = ?, fn (fact) { puts("#{s} #{p} #{o}"); :ok })
Facts.with_tags(db, s = ?, p = ?, o = ?, fn (fact) { puts("#{s} #{p} #{o}"); :ok })
quote Facts.remove_tags(db, 4, 5, 6)
Facts.remove_tags(db, 4, 5, 6)
quote Facts.with_tags(db, s = ?, p = ?, o = ?, fn (fact) { puts("#{s} #{p} #{o}") ; :ok })
Facts.with_tags(db, s = ?, p = ?, o = ?, fn (fact) { puts("#{s} #{p} #{o}") ; :ok })
