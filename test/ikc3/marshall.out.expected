require Marshall
true
require MarshallRead
true
loopback = fn (tag) do
  str = Marshall.tag_to_str(tag)
  result = MarshallRead.tag_from_str(str)
  if (inspect(result) == inspect(tag)) do
    {:ok, Str.size(str)}
  else
    {:ko, Str.size(str), result}
  end
end
fn (tag) do
  str = Marshall.tag_to_str(tag)
  result = MarshallRead.tag_from_str(str)
  if (inspect(result) == inspect(tag)) do
    {:ok, Str.size(str)}
  else
    {:ko, Str.size(str), result}
  end
end
loopback(false)
{:ok, 34}
loopback(true)
{:ok, 34}
loopback('A')
{:ok, 34}
loopback('\0')
{:ok, 34}
loopback('Z')
{:ok, 34}
loopback(0)
{:ok, 34}
loopback(1)
{:ok, 34}
loopback(2)
{:ok, 34}
loopback(255)
{:ok, 34}
loopback(256)
{:ok, 35}
loopback(-1234)
{:ok, 35}
loopback(1234)
{:ok, 35}
loopback(-123456789)
{:ok, 37}
loopback(123456789)
{:ok, 37}
loopback((F32) 0.0)
{:ok, 37}
loopback((F32) 1.0)
{:ok, 37}
loopback((F64) 0.0)
{:ok, 41}
loopback((F64) 1.0)
{:ok, 41}
loopback((F128) 0.0)
{:ok, 49}
loopback((F128) 1.0)
{:ok, 49}
loopback("")
{:ok, 37}
loopback("hello")
{:ok, 42}
loopback("héllo wörld")
{:ok, 50}
loopback([0, 1])
{:ok, 63}
loopback([[2, 3], [4, 5]])
{:ok, 121}
loopback(%Time{})
{:ok, 50}
loopback((Ptr) 0x0)
{:ok, 41}
loopback(1 +i 2)
{:ok, 45}
loopback(false)
{:ok, 34}
loopback(true)
{:ok, 34}
loopback('0')
{:ok, 34}
loopback('z')
{:ok, 34}
loopback('\n')
{:ok, 34}
loopback('\t')
{:ok, 34}
loopback(255)
{:ok, 34}
loopback(127)
{:ok, 34}
loopback(128)
{:ok, 34}
loopback(-1)
{:ok, 34}
loopback(-32768)
{:ok, 35}
loopback(32767)
{:ok, 35}
loopback(65535)
{:ok, 35}
loopback(-2147483648)
{:ok, 37}
loopback(2147483647)
{:ok, 37}
loopback(4294967295)
{:ok, 37}
loopback(-9223372036854775808)
{:ok, 41}
loopback(9223372036854775807)
{:ok, 41}
loopback(18446744073709551615)
{:ok, 41}
loopback((Integer) 1024)
{:ok, 44}
loopback(10000000000000000000000000000000000)
{:ok, 57}
loopback(123456789012345678901234567890)
{:ok, 55}
loopback((F32) -1.0)
{:ok, 37}
loopback((F32) 3.141592)
{:ok, 37}
loopback((F32) 4.294966e+9)
{:ok, 37}
loopback((F64) -1.0)
{:ok, 41}
loopback((F64) 3.14159265358979)
{:ok, 41}
loopback((F64) 4.294967296e+9)
{:ok, 41}
loopback((F128) -1.0)
{:ok, 49}
loopback((F128) 3.141592653589793237862287655914883)
{:ok, 49}
loopback(2/6)
{:ok, 53}
loopback(1/3)
{:ok, 53}
loopback(22/7)
{:ok, 53}
loopback(0 +i 1)
{:ok, 45}
loopback(-1 +i -2)
{:ok, 45}
loopback((F32) 3.14 +i (F32) 2.71)
{:ok, 51}
loopback("test\ntab\there")
{:ok, 50}
loopback([])
{:ok, 41}
loopback([1, 2, 3, 4, 5])
{:ok, 96}
loopback([true, false, 'A'])
{:ok, 74}
loopback(["hello", "world"])
{:ok, 79}
loopback([[[1]]])
{:ok, 88}
loopback({1, 2, 3})
{:ok, 47}
loopback({true, 'A', "test"})
{:ok, 54}
loopback({1, 2, [3, 4]})
{:ok, 76}
loopback(do end)
{:ok, 33}
loopback(Module)
{:ok, 51}
loopback(:test)
{:ok, 49}
loopback(:hello_world)
{:ok, 56}
loopback(%{})
{:ok, 41}
loopback(%{a: 1,
           b: 2})
{:ok, 73}
loopback(%{key: "value",
           num: 42})
{:ok, 85}
loopback(%{nested: %{inner: true}})
{:ok, 89}
loopback(%Time{tv_sec: 1000, tv_nsec: 2000})
{:ok, 50}
loopback(%Time{tv_sec: 1 + 1, tv_nsec: 2 + 2})
{:ok, 50}
loopback((Ptr) 0x0)
{:ok, 41}
loopback((PtrFree) 0x0)
{:ok, 41}
loopback((U8) ?)
{:ok, 86}
loopback(?)
{:ok, 87}
loopback(fn (x) { x * 2 })
{:ok, 231}
loopback(fn (a, b) { a + b })
{:ok, 282}
loopback(List.reverse([]))
{:ok, 41}
loopback(a = 1)
{:ok, 34}
loopback(defmodule Test do end)
{:ok, 49}
loopback(do
  1
  2
  3
end)
{:ok, 34}
loopback(cfn Tag "tag_add" (Tag, Tag, Result))
{:ok, 157}
loopback(%KC3.Op{sym: :-,
                 callable: cfn Tag "tag_add" (Tag, Tag, Result)})
{:ok, 452}
