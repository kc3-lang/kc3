## kc3
## Copyright from 2022 to 2025 kmx.io <contact@kmx.io>
##
## Permission is hereby granted to use this software granted the above
## copyright notice and this permission paragraph are included in all
## copies and substantial portions of this software.
##
## THIS SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY GUARANTEE OF
## PURPOSE AND PERFORMANCE. IN NO EVENT WHATSOEVER SHALL THE
## AUTHOR BE CONSIDERED LIABLE FOR THE USE AND PERFORMANCE OF
## THIS SOFTWARE.

require Buf
require Compare
require List

defmodule HTTP.Request do

  defstruct [method: ?,
             body: ?,
             url: "/",
             protocol: "HTTP/1.1",
             client_addr: "",
             headers: [],
             cookies: [],
             params: %{}]

  dlopen("http.so")

  def allowed_methods = [DELETE,
                         GET,
                         HEAD,
                         POST,
                         PUT]

  def buf_parse = cfn Tag "http_request_buf_parse" (Result, Buf)

  def buf_write = cfn Sw "http_request_buf_write" (HTTP.Request, Buf)

  def header_find_if = fn ({h_name, h_value}) do
    if ! Compare.str_case_insensitive(header_name, h_name) do
      h_value
    end
  end

  def header = fn (request, header_name) {
    List.find_if(request.headers, HTTP.Request.header_find_if)
  }

end
