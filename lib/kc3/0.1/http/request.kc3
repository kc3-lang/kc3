defmodule HTTP.Request do

  require Compare
  require List

  defstruct [method: ?,
             body: ?,
             url: "/",
             protocol: "HTTP/1.1",
             client_addr: "",
             headers: [],
             cookies: [],
             params: %{}]

  dlopen(__DIR__ + "../http.so")

  def allowed_methods = [DELETE,
                         GET,
                         HEAD,
                         POST,
                         PUT]

  def buf_parse = cfn Tag "http_request_buf_parse" (Result, Buf)

  def buf_write = cfn Sw "http_request_buf_write" (HTTP.Request, Buf)

  def header = fn (request, header_name) {
    List.find_if(request.headers, fn ({h_name, h_value}) do
      if ! Compare.str_case_insensitive(header_name, h_name) do
        h_value
      end
    end)
  }

end
