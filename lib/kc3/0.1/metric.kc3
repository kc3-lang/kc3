defmodule Metric do

  def normalize = fn (key) {
    if (key != "/" && Str.ends_with?(key, "/")) do
      Str.slice(key, 0, -2)
    else
      key
    end
  end

  def get = fn (key) {
    key = normalize(key)
    count = Facts.first_with_tags(Config.db, key, :metric_hits, count = ?,
      fn (x) { count })
    if is_integer?(count) do
      count
    else
      0
    end
  }

  def hit = fn (key) {
    key = normalize(key)
    count = Metric.get(key) + 1
    Facts.replace_tags(Config.db, key, :metric_hits, count)
    count
  }

end
