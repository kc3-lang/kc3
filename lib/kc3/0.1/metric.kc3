## kc3
## Copyright from 2022 to 2025 kmx.io <contact@kmx.io>
##
## Permission is hereby granted to use this software granted the above
## copyright notice and this permission paragraph are included in all
## copies and substantial portions of this software.
##
## THIS SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY GUARANTEE OF
## PURPOSE AND PERFORMANCE. IN NO EVENT WHATSOEVER SHALL THE
## AUTHOR BE CONSIDERED LIABLE FOR THE USE AND PERFORMANCE OF
## THIS SOFTWARE.

defmodule Metric do

  require Facts
  require Integer
  require Str
  require URL

  def normalize = fn (key) {
    key = URL.unescape(key)
    if (key != "/" && Str.ends_with?(key, "/")) do
      Str.slice(key, 0, -2)
    else
      key
    end
  }

  def get = fn (key) {
    key = normalize(key)
    count = Facts.first_with_tags(Config.db, key, :metric_hits, count = ?,
      fn (x) { count })
    if is_integer?(count) do
      count
    else
      0
    end
  }

  def hit = fn (key) {
    key = normalize(key)
    count = Metric.get(key) + 1
    Facts.replace_tags(Config.db, key, :metric_hits, count)
    count
  }

end
