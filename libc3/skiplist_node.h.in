/* c3
 * Copyright 2022,2023 kmx.io <contact@kmx.io>
 *
 * Permission is hereby granted to use this software granted the above
 * copyright notice and this permission paragraph are included in all
 * copies and substantial portions of this software.
 *
 * THIS SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY GUARANTEE OF
 * PURPOSE AND PERFORMANCE. IN NO EVENT WHATSOEVER SHALL THE
 * AUTHOR BE CONSIDERED LIABLE FOR THE USE AND PERFORMANCE OF
 * THIS SOFTWARE.
 */
/* Gen from skiplist_node.h.in NAME=_NAME$ TYPE=_TYPE$ */
/**
 * @file skiplist_node___NAME$.h
 * @brief Element of a skiplist of _NAME$s.
 *
 * Data structure for skiplist nodes containing _TYPE$.
 */
#ifndef LIBC3_SKIPLIST_NODE___NAME$_H
#define LIBC3_SKIPLIST_NODE___NAME$_H

#include "types.h"

#define SKIPLIST_NODE_LINKS___NAME$(node) \
  ((s_skiplist_node___NAME$ **) (((s_skiplist_node___NAME$ *) node) + 1))

#define SKIPLIST_NODE_NEXT___NAME$(node, height) \
  (SKIPLIST_NODE_LINKS___NAME$(node)[height])

#define SKIPLIST_NODE_SIZE___NAME$(height) \
  (sizeof(s_skiplist_node___NAME$) + (height) * sizeof(_TYPE$))

s_skiplist_node___NAME$ *
skiplist_node_init (s_skiplist_node___NAME$ *node, _TYPE$ value, u8 height);

s_skiplist_node___NAME$ *
skiplist_node_new___NAME$ (_TYPE$ value, u8 height);

void
skiplist_node_delete___NAME$ (s_skiplist_node___NAME$ *node);

void
skiplist_node_insert___NAME$ (s_skiplist_node___NAME$ *node, s_skiplist_node___NAME$ *pred);

#endif /* LIBC3_SKIPLIST_NODE___NAME$_H */
