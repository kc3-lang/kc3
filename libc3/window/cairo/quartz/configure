#!/bin/sh
## c3
## Copyright 2022,2023 kmx.io <contact@kmx.io>
##
## Permission is hereby granted to use this software granted the above
## copyright notice and this permission paragraph are included in all
## copies and substantial portions of this software.
##
## THIS SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY GUARANTEE OF
## PURPOSE AND PERFORMANCE. IN NO EVENT WHATSOEVER SHALL THE
## AUTHOR BE CONSIDERED LIABLE FOR THE USE AND PERFORMANCE OF
## THIS SOFTWARE.

set -e

export SRC_TOP="$(dirname "$PWD")"

. ../../../../config.subr

LIB=libc3_window_cairo_quartz.la
LIB_ASAN=libc3_window_cairo_quartz_asan.la
LIB_COV=libc3_window_cairo_quartz_cov.la
LIB_DEBUG=libc3_window_cairo_quartz_debug.la

echo "LIB = $LIB" >> ${CONFIG_MK}
echo "LIB_ASAN = $LIB_ASAN" >> ${CONFIG_MK}
echo "LIB_COV = $LIB_COV" >> ${CONFIG_MK}
echo "LIB_DEBUG = $LIB_DEBUG" >> ${CONFIG_MK}

. ./sources.sh

OBJECTS="$(c2ext .main.lo "$SOURCES")"
OBJECTS="$OBJECTS $(objc2ext .main.lo "$OBJC_SOURCES")"
echo "OBJECTS = $OBJECTS" >> ${CONFIG_MK}

OBJECTS_ASAN="$(c2ext .asan.lo "$SOURCES")"
OBJECTS_ASAN="$OBJECTS_ASAN $(objc2ext .asan.lo "$OBJC_SOURCES")"
echo "OBJECTS_ASAN = $OBJECTS_ASAN" >> ${CONFIG_MK}

if $HAVE_GCOV; then
    OBJECTS_COV="$(c2ext .cov.lo "$SOURCES")"
    OBJECTS_COV="$OBJECTS_COV $(objc2ext .cov.lo "$OBJC_SOURCES")"
    echo "OBJECTS_COV = $OBJECTS_COV" >> ${CONFIG_MK}
fi

OBJECTS_DEBUG="$(c2ext .debug.lo "$SOURCES")"
OBJECTS_DEBUG="$OBJECTS_DEBUG $(objc2ext .debug.lo "$OBJC_SOURCES")"
echo "OBJECTS_DEBUG = $OBJECTS_DEBUG" >> ${CONFIG_MK}

# Common config for all targets
CPPFLAGS="$CPPFLAGS -I../../../../libffi/include -I../../../.."
CFLAGS="$CFLAGS -W -Wall -Werror -std=c99 -pedantic"
OBJCFLAGS="$CFLAGS -W -Wall -Werror"
LDFLAGS="--shared $LDFLAGS"
LIBS="$LIBS"
config_asan
config_gnu
pkg_config cairo
pkg_config cairo-ft
config_lib COCOA -framework Cocoa
pkg_config xkbcommon

# Asan config
CFLAGS_ASAN="$CFLAGS -fsanitize=address -O1 -fno-omit-frame-pointer -g"
LDFLAGS_ASAN="$LDFLAGS"
LOCAL_LIBS_ASAN="../libc3_window_cairo_asan.la"
LIBS_ASAN="$LOCAL_LIBS_ASAN $LIBS"

# Coverage config
CFLAGS_COV="$CFLAGS -ftest-coverage -fprofile-arcs -fprofile-generate"
LDFLAGS_COV="$LDFLAGS --coverage"
LOCAL_LIBS_COV="../libc3_window_cairo_cov.la"
LIBS_COV="$LOCAL_LIBS_COV $LIBS"

# Debug config
CFLAGS_DEBUG="$CFLAGS -DDEBUG -O0 -g"
LDFLAGS_DEBUG="$LDFLAGS"
LOCAL_LIBS_DEBUG="../libc3_window_cairo_debug.la"
LIBS_DEBUG="$LOCAL_LIBS_DEBUG $LIBS"

# Main config
DEFAULT_CFLAGS="-O2 -pipe"
if [ "x$ENV_CFLAGS" = "x" ]; then
    CFLAGS="$CFLAGS $DEFAULT_CFLAGS"
fi
CFLAGS="$CFLAGS -DNDEBUG"
LOCAL_LIBS="../libc3_window_cairo.la"
LIBS="$LOCAL_LIBS $LIBS"

echo "HAVE_ASAN = $HAVE_ASAN" >> ${CONFIG_MK}
echo "CPPFLAGS = $CPPFLAGS" >> ${CONFIG_MK}
echo "CFLAGS = $CFLAGS" >> ${CONFIG_MK}
echo "LDFLAGS = $LDFLAGS" >> ${CONFIG_MK}
echo "LIBS = $LIBS" >> ${CONFIG_MK}
echo >> ${CONFIG_MK}
echo "CFLAGS_ASAN = $CFLAGS_ASAN" >> ${CONFIG_MK}
echo "LDFLAGS_ASAN = $LDFLAGS_ASAN" >> ${CONFIG_MK}
echo "LIBS_ASAN = $LIBS_ASAN" >> ${CONFIG_MK}
echo >> ${CONFIG_MK}
echo "CFLAGS_COV = $CFLAGS_COV" >> ${CONFIG_MK}
echo "LDFLAGS_COV = $LDFLAGS_COV" >> ${CONFIG_MK}
echo "LIBS_COV = $LIBS_COV" >> ${CONFIG_MK}
echo >> ${CONFIG_MK}
echo "CFLAGS_DEBUG = $CFLAGS_DEBUG" >> ${CONFIG_MK}
echo "LDFLAGS_DEBUG = $LDFLAGS_DEBUG" >> ${CONFIG_MK}
echo "LIBS_DEBUG = $LIBS_DEBUG" >> ${CONFIG_MK}

echo >> ${CONFIG_MK}
echo "$LIB: $LIBS_LOCAL $OBJECTS" >> ${CONFIG_MK}
echo "	${LIBTOOL} --tag=CC --mode=link \${CC} -shared \${LDFLAGS} ${OBJECTS} \${LIBS} -rpath ${LIBDIR} -o ${LIB}" >> ${CONFIG_MK}

echo >> ${CONFIG_MK}
echo "$LIB_ASAN: $LIBS_LOCAL_ASAN $OBJECTS_ASAN" >> ${CONFIG_MK}
echo "	${LIBTOOL} --tag=CC --mode=link \${CC} -shared \${LDFLAGS_ASAN} ${OBJECTS_ASAN} \${LIBS_ASAN} -rpath ${LIBDIR} -o ${LIB_ASAN}" >> ${CONFIG_MK}

echo >> ${CONFIG_MK}
echo "$LIB_COV: $LIBS_LOCAL_COV $OBJECTS_COV" >> ${CONFIG_MK}
echo "	${LIBTOOL} --tag=CC --mode=link \${CC} -shared \${LDFLAGS_COV} ${OBJECTS_COV} \${LIBS_COV} -rpath ${LIBDIR} -o ${LIB_COV}" >> ${CONFIG_MK}

echo >> ${CONFIG_MK}
echo "$LIB_DEBUG: $LIBS_LOCAL_DEBUG $OBJECTS_DEBUG" >> ${CONFIG_MK}
echo "	${LIBTOOL} --tag=CC --mode=link \${CC} -shared \${LDFLAGS_DEBUG} ${OBJECTS_DEBUG} \${LIBS_DEBUG} -rpath ${LIBDIR} -o ${LIB_DEBUG}" >> ${CONFIG_MK}

for SRC in $SOURCES; do
    echo >> ${CONFIG_MK}
    SRC_LO="$(c2ext .main.lo "$SRC")"
    c_ext_rule .main.lo "$SRC" >> ${CONFIG_MK}
    echo "	${LIBTOOL} --tag=CC --mode=compile \${CC} \${CPPFLAGS} \${CFLAGS} -c $SRC -o $SRC_LO" >> ${CONFIG_MK}

    echo >> ${CONFIG_MK}
    SRC_ASAN_LO="$(c2ext .asan.lo "$SRC")"
    c_ext_rule .asan.lo "$SRC" >> ${CONFIG_MK}
    echo "	${LIBTOOL} --tag=CC --mode=compile \${CC} \${CPPFLAGS} \${CFLAGS_ASAN} -c $SRC -o $SRC_ASAN_LO" >> ${CONFIG_MK}

    echo >> ${CONFIG_MK}
    SRC_COV_LO="$(c2ext .cov.lo "$SRC")"
    c_ext_rule .cov.lo "$SRC" >> ${CONFIG_MK}
    echo "	${LIBTOOL} --tag=CC --mode=compile \${CC} \${CPPFLAGS} \${CFLAGS_COV} -c $SRC -o $SRC_COV_LO" >> ${CONFIG_MK}

    echo >> ${CONFIG_MK}
    SRC_DEBUG_LO="$(c2ext .debug.lo "$SRC")"
    c_ext_rule .debug.lo "$SRC" >> ${CONFIG_MK}
    echo "	${LIBTOOL} --tag=CC --mode=compile \${CC} \${CPPFLAGS} \${CFLAGS_DEBUG} -c $SRC -o $SRC_DEBUG_LO" >> ${CONFIG_MK}
done

for SRC in $OBJC_SOURCES; do
    echo >> ${CONFIG_MK}
    SRC_LO="$(objc2ext .main.lo "$SRC")"
    objc_ext_rule .main.lo "$SRC" >> ${CONFIG_MK}
    echo "	${LIBTOOL} --tag=CC --mode=compile \${OBJCC} \${CPPFLAGS} \${CFLAGS} -c $SRC -o $SRC_LO" >> ${CONFIG_MK}

    echo >> ${CONFIG_MK}
    SRC_LO="$(objc2ext .asan.lo "$SRC")"
    objc_ext_rule .asan.lo "$SRC" >> ${CONFIG_MK}
    echo "	${LIBTOOL} --tag=CC --mode=compile \${OBJCC} \${CPPFLAGS} \${CFLAGS_ASAN} -c $SRC -o $SRC_LO" >> ${CONFIG_MK}

    echo >> ${CONFIG_MK}
    SRC_LO="$(objc2ext .cov.lo "$SRC")"
    objc_ext_rule .cov.lo "$SRC" >> ${CONFIG_MK}
    echo "	${LIBTOOL} --tag=CC --mode=compile \${OBJCC} \${CPPFLAGS} \${CFLAGS_COV} -c $SRC -o $SRC_LO" >> ${CONFIG_MK}

    echo >> ${CONFIG_MK}
    SRC_LO="$(objc2ext .debug.lo "$SRC")"
    objc_ext_rule .debug.lo "$SRC" >> ${CONFIG_MK}
    echo "	${LIBTOOL} --tag=CC --mode=compile \${OBJCC} \${CPPFLAGS} \${CFLAGS_DEBUG} -c $SRC -o $SRC_LO" >> ${CONFIG_MK}
done

update_config_mk
env_reset
( cd demo && ./configure; )
