#!/bin/sh
## kc3
## Copyright from 2022 to 2025 kmx.io <contact@kmx.io>
##
## Permission is hereby granted to use this software granted the above
## copyright notice and this permission paragraph are included in all
## copies and substantial portions of this software.
##
## THIS SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY GUARANTEE OF
## PURPOSE AND PERFORMANCE. IN NO EVENT WHATSOEVER SHALL THE
## AUTHOR BE CONSIDERED LIABLE FOR THE USE AND PERFORMANCE OF
## THIS SOFTWARE.

set -e

echo "$0"
export BUILD_TOP="$(dirname "$PWD")"
export DIR="$(basename $PWD)"
export SRC_TOP="$(dirname "$(cd "$(dirname "$0")" && pwd)")"

. "${SRC_TOP}/config.subr"

config_prog ikc3

. "${SRC_DIR}/sources.sh"

# Common config for all targets
CPPFLAGS="-I.. $CPPFLAGS"
CFLAGS="$CFLAGS -W -Wall -Werror -std=c11 -pedantic -fPIC -pthread"
config_asan
config_gnu
config_i386
config_win32
config_win64
pkg_config libbsd-overlay
pkg_config libffi
pkg_config libmd
pkg_config libtls
config_lib libmd -lmd 2>/dev/null
config_lib dl -ldl 2>/dev/null
pkg_config wineditline
if ! $HAVE_WIN32; then
    LDFLAGS="$LDFLAGS -rdynamic"
fi
LIBS="-ltls $LIBS"

if pkg-config wineditline; then
    config_define HAVE_WINEDITLINE 1
    HAVE_WINEDITLINE=true
    SOURCES="$SOURCES $SOURCES_WINEDITLINE"
else
    HAVE_WINEDITLINE=false
    SOURCES="$SOURCES $SOURCES_LINENOISE"
fi

# Sources
OBJECTS="$(c2ext .main.o "$SOURCES")"
echo "OBJECTS = $OBJECTS" >> ${CONFIG_MK}

OBJECTS_ASAN="$(c2ext .asan.o "$SOURCES")"
echo "OBJECTS_ASAN = $OBJECTS_ASAN" >> ${CONFIG_MK}

OBJECTS_COV="$(c2ext .cov.o "$SOURCES")"
echo "OBJECTS_COV = $OBJECTS_COV" >> ${CONFIG_MK}

OBJECTS_DEBUG="$(c2ext .debug.o "$SOURCES")"
echo "OBJECTS_DEBUG = $OBJECTS_DEBUG" >> ${CONFIG_MK}

# Asan config
CPPFLAGS_ASAN="$CPPFLAGS"
CFLAGS_ASAN="$CFLAGS -DDEBUG -O1 -g"
CFLAGS_ASAN="$CFLAGS_ASAN -fsanitize=address -fno-omit-frame-pointer"
LDFLAGS_ASAN="$LDFLAGS"
LIBKC3_ASAN=../libkc3/libkc3_asan.so
LOCAL_LIBS_ASAN="$LIBKC3_ASAN ../socket/libkc3_socket_asan.so"
LOCAL_LIBS_ASAN="$LOCAL_LIBS_ASAN ../tls/libkc3_tls_asan.so"
LIBS_ASAN="$LOCAL_LIBS_ASAN $LIBS -lasan"

# Coverage config
CPPFLAGS_COV="$CPPFLAGS"
CFLAGS_COV="$CFLAGS -fprofile-arcs -ftest-coverage"
LDFLAGS_COV="$LDFLAGS --coverage"
LIBKC3_COV=../libkc3/libkc3_cov.so
LOCAL_LIBS_COV="$LIBKC3_COV ../socket/libkc3_socket_cov.so"
LOCAL_LIBS_COV="$LOCAL_LIBS_COV ../tls/libkc3_tls_cov.so"
LIBS_COV="$LOCAL_LIBS_COV $LIBS -lgcov"

# Debug config
CPPFLAGS_DEBUG="$CPPFLAGS"
CFLAGS_DEBUG="$CFLAGS -DDEBUG -O0 -g"
LDFLAGS_DEBUG="$LDFLAGS"
LIBKC3_DEBUG=../libkc3/libkc3_debug.so
LOCAL_LIBS_DEBUG="$LIBKC3_DEBUG"
LOCAL_LIBS_DEBUG="$LOCAL_LIBS_DEBUG ../socket/libkc3_socket_debug.so"
LOCAL_LIBS_DEBUG="$LOCAL_LIBS_DEBUG ../tls/libkc3_tls_debug.so"
LIBS_DEBUG="$LOCAL_LIBS_DEBUG $LIBS"

# Main config
DEFAULT_CFLAGS="-O2 -fPIC"
if [ "x$ENV_CFLAGS" = "x" ]; then
    CFLAGS="$CFLAGS $DEFAULT_CFLAGS"
fi
CFLAGS="$CFLAGS -DNDEBUG"
LIBKC3=../libkc3/libkc3.so
LOCAL_LIBS="$LIBKC3 ../socket/libkc3_socket.so"
LOCAL_LIBS="$LOCAL_LIBS ../tls/libkc3_tls.so"
LIBS="$LOCAL_LIBS $LIBS"

echo "HAVE_ASAN = $HAVE_ASAN" >> ${CONFIG_MK}
echo "CPPFLAGS = $CPPFLAGS" >> ${CONFIG_MK}
echo "CFLAGS = $CFLAGS" >> ${CONFIG_MK}
echo "LDFLAGS = $LDFLAGS" >> ${CONFIG_MK}
echo "LIBS = $LIBS" >> ${CONFIG_MK}
echo >> ${CONFIG_MK}
echo "CPPFLAGS_ASAN = $CPPFLAGS_ASAN" >> ${CONFIG_MK}
echo "CFLAGS_ASAN = $CFLAGS_ASAN" >> ${CONFIG_MK}
echo "LDFLAGS_ASAN = $LDFLAGS_ASAN" >> ${CONFIG_MK}
echo "LIBS_ASAN = $LIBS_ASAN" >> ${CONFIG_MK}
echo >> ${CONFIG_MK}
echo "CPPFLAGS_COV = $CPPFLAGS_COV" >> ${CONFIG_MK}
echo "CFLAGS_COV = $CFLAGS_COV" >> ${CONFIG_MK}
echo "LDFLAGS_COV = $LDFLAGS_COV" >> ${CONFIG_MK}
echo "LIBS_COV = $LIBS_COV" >> ${CONFIG_MK}
echo >> ${CONFIG_MK}
echo "CPPFLAGS_DEBUG = $CPPFLAGS_DEBUG" >> ${CONFIG_MK}
echo "CFLAGS_DEBUG = $CFLAGS_DEBUG" >> ${CONFIG_MK}
echo "LDFLAGS_DEBUG = $LDFLAGS_DEBUG" >> ${CONFIG_MK}
echo "LIBS_DEBUG = $LIBS_DEBUG" >> ${CONFIG_MK}

update_build_c
update_build_prog

build_o_c
build_prog

update_config_mk
update_makefile
