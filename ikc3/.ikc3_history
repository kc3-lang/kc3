require EKC3
EKC3.parse_template_str("Abc")
require EKC3
EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi")
require EKC3
EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi")
require EKC3
EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi")
require EKC3
EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi")
require EKC3
EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi")
require EKC3
EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi")
puts(EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi"))
EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi")
require EKC3
EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi")
puts(EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi"))
EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi")
require EKC3
puts(EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi"))
require EKC3
puts(EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi"))
require EKC3
puts(EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi"))
require EKC3
puts(EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi"))
require EKC3
puts(EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi"))
require EKC3
puts(EKC3.parse_template_str("Abc<%= 123 %>Def<% :plop %>Ghi"))
require Marshall
Marshall.tag_to_str("hello")
0/1
inspect(0/1)
[[[quote 1 + 1]]]
str([str([str([quote 1 + 1])])])
str([str([str([(Str) quote 1 + 1])])])
let a = fn (x) { x + 1 }
let b = fn (x) { x + 2 }
let b = fn (x) { a(x) }
let c = fn (x) { b(x) }
a(quote 1 + 1)
a = fn (x) { x + 1 }
b = fn (x) { a(x) }
c = fn (x) { b(x) }
a(quote 1 + 1)
a(quote quote 1 + 1)
b(quote quote 1 + 1)
require EKC3
EKC3.parse_template_from_str("abc<%= quote %>def<% ghi")
EKC3.parse_template_str("abc<%= quote %>def<% ghi")
require EKC3
EKC3.parse_template_str("abc<%= quote %>def<% ghi")
EKC3.parse_template_str("abc<%= quote %>def<% ghi %>")
require EKC3
EKC3.parse_template_str("abc<%= quote %>def<% ghi %>")
EKC3.parse_str("abc<%= quote %>def<% ghi %>")
require EKC3
EKC3.parse_str("abc<%= quote %>def<% ghi %>")
q
require EKC3
EKC3.parse_str("abc<%= quote %>def<% ghi %>")
require EKC3
EKC3.parse_str("abc<%= quote %>def<% ghi %>")
require EKC3
EKC3.parse_str("abc<%= quote %>def<% ghi %>")
EKC3.parse_str("""abc<%= quote %>def<% 123 %>ghi<% \"plop\" %>""")
EKC3.parse_str("""abc<%= str([ %>def<%, 123, %>ghi<% ]) puts(\"plop\") %>""")
EKC3.parse_str("""abc<%= str([ %>def<% , 123, %>ghi<% ]) puts("plop") %>""")
EKC3.parse_str("""abc<%= str([ %>def<% , 123, %>ghi<% ]) %><% puts("plop") %>""")
require EKC3
EKC3.parse_str("""abc<%= str([ %>def<% , 123, %>ghi<% ]) %><% puts("plop") %>""")
def t = EKC3.parse_str("""abc<%= str([ %>def<% , 123, %>ghi<% ]) %><% puts("plop") %>""")
t
require EKC3
t = EKC3.parse_str("""abc<%= str([ %>def<% , 123, %>ghi<% ]) %><% puts("plop") %>""")
require EKC3
t = EKC3.parse_str("""abc<%= str([ %>def<% , 123, %>ghi<% ]) %><% puts("plop") %>""")
require Env
Env.out_buf()
require EKC3
require Env
t = EKC3.parse_str("""abc<%= str([ %>def<% , 123, %>ghi<% ]) %><% puts("plop") %>""")
t(Env.out_buf())
t = EKC3.parse_str("""abc<%= str([ %>def<% , (Str) 123, %>ghi<% ]) %><% puts("plop") %>""")
t(Env.out_buf())
require EKC3
require Env
t = EKC3.parse_str("""abc<%= str([ %>def<% , (Str) 123, %>ghi<% ]) %><% puts("plop") %>""")
t(Env.out_buf())
t = EKC3.parse_str("""abc<%= str([ %>def<% , (Str) 123, %>ghi<% ]) %><% puts("plop") %>""")
1 + 1
2+
2

2 +

2


2
2

2
2


23

2 +
1
1 + 1

