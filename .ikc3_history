EKC3.load("www/app/templates/layout.html.ekc3")
require EKC3
EKC3.load("www/app/templates/layout.html.ekc3")
dump("dump")
1 + 1
123
12345678900000000000000000000000000000
type(12345678900000000000000000000000000000)
1 + 1
a = 1
=
1 + 1
KC3.Op.arity(:=)
MarshallRead.new_from_file("lib/kc3/0.1/kc3.dump")
1 + 1
:+
type(:+)
type(quote 1 + 1)
type(quote (1 + 1))
1 + 1
a = 1
a
1 + 1
a = 1
pwd
1 + 1
1 + 1000000000000000000000000000000000000000000000
& 1
p = & 1
*p
* p
p = & 1
* p
p = 1
a = 1
pa = & a
b = 2
pb = & b
* pa
a
* pa
Facts.env_db
Facts.env_db()
p = & Facts.env_db()
(Facts) Facts.env_db()
(Facts*) Facts.env_db()
 Facts.env_db()
type(Facts.env_db())
& 1
(U8*) 1
a = 1
& a
b = & a
b
* b
a = 2
* b
sysctl
sysctl([:fs, :posix, :setuid])
require tls
require TLS
TLS.ca_cert_path()
require TLS
TLS.init()
require TLS
TLS.init()
require TLS
TLS.init()
TLS.ca_cert_path()
1 + 1
1 +
2
3
3 + List.Count()
1 + 1
system("ls")
system(["ls"])
puts(system(["ls"]))
a
1
2
1 + 1
1
require TLS
require TLS.Server
system
system(["hostname"])
hostname()
system(["hostname"])
puts(quote 123)
puts(quote quote 123)
puts((Str) quote quote 123)
puts((Str) quote quote a = 1)
puts((Str) quote quote a = b)
puts((Str) quote quote a = 1)
puts((Str) quote quote a = 1 + 1)
puts((Str) quote a = 1 + 1)
sleep
sleep(1)
