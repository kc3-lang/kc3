1 + 1
1 + 1000000000000000000000000000000000000000000000
& 1
p = & 1
*p
* p
p = & 1
* p
p = 1
a = 1
pa = & a
b = 2
pb = & b
* pa
a
* pa
Facts.env_db
Facts.env_db()
p = & Facts.env_db()
(Facts) Facts.env_db()
(Facts*) Facts.env_db()
 Facts.env_db()
type(Facts.env_db())
& 1
(U8*) 1
a = 1
& a
b = & a
b
* b
a = 2
* b
sysctl
sysctl([:fs, :posix, :setuid])
require tls
require TLS
TLS.ca_cert_path()
require TLS
TLS.init()
require TLS
TLS.init()
require TLS
TLS.init()
TLS.ca_cert_path()
1 + 1
1 +
2
3
3 + List.Count()
1 + 1
system("ls")
system(["ls"])
puts(system(["ls"]))
a
1
2
1 + 1
1
securelevel
securelevel(0)
securelevel(1)
securelevel(0)
securelevel(1)
securelevel(2)
securelevel(1)
securelevel(0)
require Buf
IO.puts("123")
Err.puts("123")
IO.puts("123")
IO.write_str("123")
Err.write_str("123")
File.read_slice("README.md", 0, 10)
require File
File.read_slice("README.md", 0, 10)
Str.inspect_hex(File.read_slice("README.md", 0, 10))
Str.to_hex("123")
require inspect
require Inspect
Inspect(Str.to_hex("123"))
Inspect.to_hex("123")
Inspect.str_hex("123")
require Counter
defcounter c = 1
c
require Counter
defcounter c = 1
c
require Counter
c
defcounter c = 1
1
require Counter
defcounter i = 0
defcounter i = 42
require Counter
defcounter a = 1
(Mutex*) 0
(Plop*) 0
