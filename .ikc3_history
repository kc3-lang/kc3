Math.next_greatest_divisor(2)
Math.next_greatest_divisor(3)
Math.next_greatest_divisor(4)
Math.next_greatest_divisor(5)
Math.next_greatest_divisor(4)
Math.next_prime(1024)
Math.next_prime(10240)
Math.next_prime(102400)
123
__DIR__
Ratio.pow(2/3, 3/1)
1 + 1
inspect(fn (a, b) { a + b })
type(fn (a, b) { a + b })
x = fn (a, b) { a + b }
inspect(x)
x = fn (a, b) { a + b }
inspect(x)
x = fn (a, b) { a + b }
inspect(x)
+(1, 1)
1 + 1
2 + 2
op = %KC3.Op{callable: fn (a, b) { a + b }}
(Ptr) op
p = (Ptr) op
op = %KC3.Op{callable: fn (a, b) { a + b }}
p = (Ptr) op
(KC3.Op) p
op = %KC3.Op{callable: fn (a, b) { a + b }}
p = (Ptr) op
(KC3.Op) p
op = %KC3.Op{callable: fn (a, b) { a + b }}
p = (Ptr) op
(KC3.Op) p
puts("plop")
op = %KC3.Op{callable: fn (a, b) { a + b }}
1 + 1
%Time{}
type(%Time{})
Tag.type(%Time{})
Tag.type(%Time{tv_sec: 3})
Tag.type(%Time{tv_sec: 3, tv_nsec: 3000})
Time.to_str(%Time{tv_sec: 3, tv_nsec: 3000})
Time.to_str(%Time{tv_sec: 300, tv_nsec: 3000})
Time.to_str(%Time{tv_sec: 3000, tv_nsec: 3000})
Time.to_str(%Time{tv_sec: 30000, tv_nsec: 3000})
Time.to_str(%Time{tv_sec: 300000, tv_nsec: 3000})
Time.to_str(%Time{tv_sec: 3000000, tv_nsec: 3000})
Time.to_str(%Time{tv_sec: 30000000, tv_nsec: 3000})
Time.to_str(%Time{tv_sec: 300000000, tv_nsec: 3000})
Time.to_str(%Time{tv_sec: 3000000000, tv_nsec: 3000})
kc3_access" [%File.Stat{st_dev: (Uw) 1039,
s = %File.Stat{st_dev: (Uw) 1039,
{tv_sec: 1741711560, tv_nsec: 122204319}}
s = %File.Stat{st_dev: (Uw) 1039}
s.st_mtim
List.to_array
a = %KC3.Op{sym: :dot, callable: fn (a, b) { a.x * b.y + a.y * b.y }}
block :abc do
  return 1
end
block :abc do
  return 1
  123
end
block :abc do
  return_from :abc 1
  123
end
block :abc do
  return_from :abc 1 + 1
  123
end
a = fn (x) { return x * 2 ; 3 }
a(1)
a = fn (x) { return (x * 2)
3
}
a(1)
a = fn (x) { return x * 2 ; 3 }
a(3)
a = fn (x) { return (x * 2) ; 3 }
a(3)
a = fn (x) { return x * 2
3
}
a(3)
quote x * 2; 3
a = fn (x) {
  return x * 3
  1
}
a(2)
a = fn (x) {
  return_from :a x * 3
  1
}
a(3)
