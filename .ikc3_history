HTTPd.routes
a = :dir
file = %{type: :dir}
file.type
file.type == :dir
file = %{type: :dir, items = [%{type: file, items: []}]}
file = %{type: :dir, items: [%{type: file, items: []}]}
file = %{type: :dir, items: [%{type: :file, items: []}]}
file = "plop.md"
Str.starts_with?(file, ".") ||                                     
(Sw) 4 > 0
q
List.sort([1, 2, 3, 4])
List.sort([4, 3, 2, 1])
List.sort(["1. a", "2. bc", "3. cde", "4. fghi"])
List.sort(["1. abcd", "2. efg", "3. hi", "4. j"])

1/3
1/3 * 2
2/6 * 2
double = fn (x) { x * 2 }
double(4)
double(21)
List.map([1, 2, 3, 4], double)
List.reverse([1, 2, 3, 4])
Time.now
Time.now()
Str.ftime(Time.now(), "%a")
Str.ftim
Str.ftime
Str.ftime(Time.now(), "%a")
Str.ftime(Time.now(), "%a, %d")
Str.ftime(Time.now(), "%a, %G")
Str.ftime(Time.now(), "%a, %m %d %G")
Str.ftime(Time.now(), "%a, %b %d %G")
Str.ftime(Time.now(), "%a, %b %d %G %T %Z")
cow 1
cow(1)
cow 1
cow 1 + 1
quote cow 1 + 1
a = cow 1 + 1
a
a + 1
a <- 3
a = cow 1 + 1
a
a = cow 1 + 1
a
a = cow 1 + 1
a
a = cow 1 + 1
a
Str.split("./fx/README", "/")
op = ?
op <- 1
op
type(op)
?0x4c21af5a1f0
Str.split("/plop/hop/", "/")
Str.split("/1/2/3/", "/")
List.join(Str.split("/1/2/3/", "/"), "/")
HTTP.mime_type(".txt")
HTTP.mime_type("plop.txt")
HTTP.mime_type("txt")
HTTP.mime_type_load("httpd/fx/config/mime.types")
HTTP.mime_type("txt")
HTTP.mime_type(".txt")
HTTP.mime_type("pplop.txt")
HTTP.mime_type("txt")
File.ext("Plop.html")
HTTP.mime_type(File.ext("Plop.html"))
(Str) HTTP.mime_type(File.ext("Plop.html"))
Str.split((Str) HTTP.mime_type(File.ext("Plop.html")), "/")
List.to_tuple(Str.split((Str) HTTP.mime_type(File.ext("Plop.html")), "/"))
(Tuple) (Str.split((Str) HTTP.mime_type(File.ext("Plop.html")), "/"))
(Str.split((Str) HTTP.mime_type(File.ext("Plop.html")), "/"))
hd(Str.split((Str) HTTP.mime_type(File.ext("Plop.html")), "/"))
List.first(Str.split((Str) HTTP.mime_type(File.ext("Plop.html")), "/"))
first(Str.split((Str) HTTP.mime_type(File.ext("Plop.html")), "/"))
(Sym) first(Str.split((Str) HTTP.mime_type(File.ext("Plop.html")), "/"))
SH.run("file -b ${SH.escape(path)}")
size = 10
if (size > 1024 * 1024 * 1024 * 1024) do                                    
if (size > 1024 * 1024 * 1024 * 1024) do
 s = size * 10 / 1024 / 1024 / 1024 / 1024
"#{s / 10}.#{s % 10}Tb"
size = 100
if (size > 1024) do
s = size * 10 / 1024
"#{s / 10}.#{s % 10}Kb"
quote %
10 % 3
human_size(1024)
human_size(1025)
human_size(1024)
human_size(2024024)
human_size(100)
Str.size("abc")
