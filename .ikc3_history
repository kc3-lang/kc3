p = & 1
* p
p = 1
a = 1
pa = & a
b = 2
pb = & b
* pa
a
* pa
Facts.env_db
Facts.env_db()
p = & Facts.env_db()
(Facts) Facts.env_db()
(Facts*) Facts.env_db()
 Facts.env_db()
type(Facts.env_db())
& 1
(U8*) 1
a = 1
& a
b = & a
b
* b
a = 2
* b
sysctl
sysctl([:fs, :posix, :setuid])
require tls
require TLS
TLS.ca_cert_path()
require TLS
TLS.init()
require TLS
TLS.init()
require TLS
TLS.init()
TLS.ca_cert_path()
1 + 1
1 +
2
3
3 + List.Count()
1 + 1
system("ls")
system(["ls"])
puts(system(["ls"]))
a
1
2
1 + 1
1
require TLS
require TLS.Server
system
system(["hostname"])
hostname()
system(["hostname"])
puts(quote 123)
puts(quote quote 123)
puts((Str) quote quote 123)
puts((Str) quote quote a = 1)
puts((Str) quote quote a = b)
puts((Str) quote quote a = 1)
puts((Str) quote quote a = 1 + 1)
puts((Str) quote a = 1 + 1)
sleep
sleep(1)
File.sha1_base64url("README.md")
require File
File.sha1_base64url("README.md")
require File
File.sha1_base64url("README.md")
File.sha512_base64url("README.md")
require File
File.sha512_base64url("README.md")
require File
File.list_recursive(".")
require File
File.list_recursive("test")
" " * 4
"a" * 4
"a" * 12
"a" * 64
"\n" * 25
IO.write_str("\n" * 25)
a = ?
a
a ← 1
a
a ← 2
a = ?
b = ^ a
a <- 1
b
a = ?
b
1 + 1
1 + 1000000000000000000000000000000000000000000000000000000000000000
