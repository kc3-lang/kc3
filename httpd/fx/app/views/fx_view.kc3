defmodule FXView do

  require HTML
  require List
  require Str
  require URL

  def menu_index_template =
    EKC3.load("app/templates/fx/menu_index.html.ekc3")

  def index_template =
    EKC3.load("app/templates/fx/index.html.ekc3")

  def properties_template =
    EKC3.load("app/templates/fx/properties.html.ekc3")

  def show_file_template =
    EKC3.load("app/templates/fx/show_file.html.ekc3")

  def render_index = fn (index) {
    EKC3.render(index_template)
  }

  def render_menu_index = fn (index) {
    EKC3.render(menu_index_template)
  }

  def render_properties = fn (properties) {
    EKC3.render(properties_template)
  }

  def render_show_file_preview = fn (path, size) {
    mime = HTTP.mime_type(File.ext(path))
    mime_first = (Sym) first(Str.split((Str) mime, "/"))
    file_path = "/file" + Str.slice(path, 4, -1)
    preview = if (mime_first == :image) do
      """<img class="#{size}" src="#{URL.escape(file_path)}" alt="#{HTML.escape(path)}" />"""
    else
      if (mime == :"text/plain") do
        file = File.read(path)
        if (size == :small && Str.size(file) > 80) do
          file = Str.slice(file, 0, 80) + "..."
        end
        """<pre class="#{size}">#{HTML.escape(file)}</pre>"""
      else
        desc = system(["file", "-b", path])
        HTML.escape(desc)
      end
    end
    """<div class="#{size}">#{preview}<hr /></div>"""
  }

  def render_show_file = fn (path, menu, file, properties) {
    EKC3.render(show_file_template)
  }

end
