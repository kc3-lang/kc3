234
123/123
123/ 123
do
1
1 + 1
2 + 2
end
hello = fn (name) { "Hello, #{name} !" }
m = macro (name) { "Hello, #{name} !" }
m(plop)
m(:plop)
m("plop")
m = macro (x) { quote 1 + unquote x }
plop = 2
m(plop)
name = "Thomas"
m = macro (x) { quote 1 + unquote x }
m(name)
name
name = "Thomas"
m = macro (x) { quote 1 + unquote x }
m(name)
name = "Thomas"
m = macro (x) { quote 1 + unquote x }
m(name)
name = "Thomas"
m = macro (x) { quote 1 + unquote x }
m(name)
name
^a = ^a
^a = ^1
^ a = ^ 1
^ a = 1
a = 1
^ a = 1
^ a
m = macro (name) { "Hello, " + name + " !" }
m("123")
m = macro (name) { quote "Hello, " + name + " !" }
m("123")
m = macro (name) { quote "Hello, " + name + " !" }
m("123")
if(true, 1, 2)
if(false, 1, 2)
if(false, 1 + 1, 2 + 2)
if(true, 1 + 1, 2 + 2)
1 + 1
1 + 100000000000000000000000000000000000000
hello = fn (name) { "Hello, #{name} !" }
hello("Guillaume")
m = macro (name) { quote "Hello, " + name + " !" }
m("123")
if(true, 1, 2)

%{name: "Guillaume", food: "sushis"}
user = %{name: "Guillaume", food: "sushis"}
greet = fn (%{name: n, food: f}) do
  "Hello, #{n}, do you want a #{f} ?"
end
u
user2A
greet(user)
greet = fn (%{name: name, food: food}) do
  "Hello, #{name}, do you want a #{food} ?"
end
greet(user)
g = user
g = ^ user
g
l = %{name: "Labrass", food: "fondue"}
greet(user)
greet(l)
greet(g)
[g, l]
List.map(greet, [g, l])
List.map([g, l], greet)
List.reverse(List.map([g, l], greet))
List.reverse([1, 2, 3])
123 & 123
123 | 123
123 bor 123
123 bor 0
List.reverse([1, 2, 3])
dlopen("libc3/window/.libs/libc3_window_debug.so")
dlopen("libc3/window/sdl2/.libs/libc3_window_sdl2.so")
%GL.Object{}
name = "Plop"
m = macro (name) { quote "Hello, " + name + " !" }
m(name)
m(^ name)
name = "Plop"
m = macro (name) { quote "Hello, " + unquote name + " !" }
name = "Plop"
m = macro (name) { quote "Hello, " + unquote name + " !" }
m(name)
m("Plop")
m(^ name)
m = macro (name) { quote "Hello, " + unquote name + " !" }
