U8[]
U8[1]
(U8[]) { 1, 2, 3 }
(U8[]) {1, 2, 3}
(U8[]) {0}
(U8[]) {1, 2, 3}
dlopen
dlopen("libc3/window/sdl2/.libs/libc3_window_sdl2.so.0.0", 0)
dlopen("libc3/window/sdl2/.libs/libc3_window_sdl2.so.0.0", (U32) 0)
dlopen("libc3/window/sdl2/.libs/libc3_window_sdl2.so.0.0", (U32) 1)
dlopen("libc3/window/sdl2/.libs/libc3_window_sdl2.so.0.0", (U32) 2)
dlopen("libc3/window/sdl2/.libs/libc3_window_sdl2.so.0.0", (U32) 0)
dlopen("libc3/window/.libs/libc3_window.so.0.0", (U32) 0)
dlopen("libc3/window/.libs/libc3_window.so.0.0", (U32) 4)
dlopen("libc3/window/.libs/libc3_window.so.0.0", (U32) 1)
dlopen("libc3/window/.libs/libc3_window.so.0.0", (U32) 2)
dlopen("libc3/window/.libs/libc3_window.so.0.0", (U32) 4)
dlopen("libc3/window/.libs/libc3_window.so.0.0", (U32) 8)
dlopen("libc3/window/.libs/libc3_window.so.0.0", (U32) 16)
dlopen("libc3/window/.libs/libc3_window.so.0.0", (U32) 32)
dlopen("libc3/window/.libs/libc3_window.so.0.0", (U32) 0)
dlopen("/home/dx/c/thodg/c3-lang/c3/libc3/window/.libs/libc3_window.so.0.0", (U32) 0)
getenv("_")
getenv("SHELL")
getenv("HOME")
getenv("USER")
"a" + "b"
"ab" + "cd"
"ab" + "cd" + "ef"
"Bonjour " + name + " !"
hello = fn (name) { "Hello, " + name + " !" }
hello("Patrice")
hello("Thomas")
"Hello, " + "Tiyon" + " !"
hello = fn (name) { "Hello, " + name + " !" }
hello("Tiyon")
hello("Patrice")
"Hello, #{name} !"
hello("Tiyon")
hello = fn (name) { "Hello, " + name + " !" }
hello("Tiyon")
hello("Baptiste")
"a"
"abc"
hello = fn (name) { "Hello, #{name} !" }
hello("Thomas")
hello = fn (name) { "Hello, #{name} !" }
name("Thomas")
hello("Thomas")
hello = fn (name) { "Hello, #{name} !" }
hello("Paul")
quote hello("Paul")
hello
quote unquote 1
quote quote unquote 1
quote unquote 1
quote quote unquote 1
dlopen("libc3/window/.libs/libc3_window_debug.so.0.0")
dlopen("libc3/window/sdl2/.libs/libc3_window_sdl2_debug.so.0.0")
dlopen("libc3/window/.libs/libc3_window_debug.so.0.0")
dlopen("libc3/window/.libs/libc3_window.so.0.0")
dlopen("../libc3/window/.libs/libc3_window_debug.so.0.0")
dlopen("../libc3/window/sdl2/.libs/libc3_window_sdl2_debug.so.0.0")
dlopen("../libc3/window/.libs/libc3_window_debug.so.0.0")
dlopen("../libc3/window/sdl2/.libs/libc3_window_sdl2_debug.so.0.0")
%GL.Object{}
type(%GL.Object{})
%GL.Object{}
dlopen("../libc3/window/.libs/libc3_window_debug.so.0.0")
dlopen("../libc3/window/sdl2/.libs/libc3_window_sdl2_debug.so.0.0")
%GL.Object{}
quote %GL.Object{}
quote %GL.Sphere{}
dlopen("../libc3/window/.libs/libc3_window_debug.so.0.0")
dlopen("libc3/window/.libs/libc3_window_debug.dylib")
dlopen("libc3/window/sdl2/.libs/libc3_window_sdl2_debug.dylib")
quote %GL.Sphere{}
do
123
456
789
end
123/
234
123/123
123/ 123
do
1
1 + 1
2 + 2
end
hello = fn (name) { "Hello, #{name} !" }
m = macro (name) { "Hello, #{name} !" }
m(plop)
m(:plop)
m("plop")
m = macro (x) { quote 1 + unquote x }
plop = 2
m(plop)
