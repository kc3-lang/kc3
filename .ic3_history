-15 mod 6
3 mod sqrt(2)
4 mod sqrt(2)
2 mod sqrt(2)
10 mod sqrt(2)
1/2 + 2/3
1/2 * 2/3
1/2 / 2/3
1/2 - 2/3
1 +i 2
(1 +i 2) + (2 +i 3)
(1 +i 2) * (2 +i 3)
ic3> (1 +i 2) + (2 +i 3)
(1 +i 2) / (2 +i 3)
(1/1 +i 2/1) / (2 +i 3)
(Ratio) 0
(Ratio) 1
(Ratio) 1.2
(Ratio) 42
(Ratio) 42 / 3
((Ratio) 42) / 3
((Ratio) 42) / 5
(Ratio) 42 / 5
(Ratio) 42
((Ratio) 42) / 5
(Ratio) 42
(Ratio) 42 / 5
(Ratio) 42 / 6
license()
license(Ã 
)
license()
hash
hash(1)
hash(2)
license()
defmodule Plop do
  1 + 1
  2 + 2
end
defmodule Plop
do
  1 + 1
  2 + 2
end
def
123 = 123
def
def a = 1
def 1 = 1
def a = 1
def 1 = 1
def a = 1
a
def a = 1
a
def a = fn (x) do x * 2 end
a
List.reverse
license
def reverse = fn (x) { List.reverse(x) }
reverse([1, 2, 3])
def reverse = fn (x) { [:reversed | List.reverse(x)] }
reverse([1, 2, 3])
def reverse = fn (x) { List.reverse(x) }
reverse([1, 2, 3])
def reverse = fn (x) { [:reversed | List.reverse(x)] }
reverse([1, 2, 3])
def reverse = fn (x) { List.reverse(x) }
reverse([1, 2, 3])
def reverse = fn (x) { List.reverse(x) }
C3.reverse
def dt = macro (x) do
  quote do
    x = ^ x
    {x, x}
  end
end
dt(200)
def dt = macro (x) do
  quote do
    x = unquote x
def dt = macro (x) do
  quote do
    x = unquote(x)
    {x, x}
  end
end
dt(200)
dt(a)
a = [1, 2, 3]
dt(a)
def dt = macro (x) do
  quote do
    x = ^ unquote(x)
    {x, x}
  end
end
dt(a)
