#!/bin/sh
## kc3
## Copyright from 2022 to 2025 kmx.io <contact@kmx.io>
##
## Permission is hereby granted to use this software granted the above
## copyright notice and this permission paragraph are included in all
## copies and substantial portions of this software.
##
## THIS SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY GUARANTEE OF
## PURPOSE AND PERFORMANCE. IN NO EVENT WHATSOEVER SHALL THE
## AUTHOR BE CONSIDERED LIABLE FOR THE USE AND PERFORMANCE OF
## THIS SOFTWARE.

set -e

echo "$0"
export BUILD_TOP="$(dirname "$(dirname "$(dirname "$PWD")")")"
export DIR="window/sdl2/demo"
export SRC_TOP="$(dirname "$(dirname "$(dirname "$(cd "$(dirname "$0")" && pwd)")")")"

. "${SRC_TOP}/config.subr"

config_prog kc3_window_sdl2_demo

. "${SRC_DIR}/sources.sh"

OBJECTS="$(c2ext .main.o "$SOURCES")"
echo "OBJECTS = $OBJECTS" >> ${CONFIG_MK}

OBJECTS_ASAN="$(c2ext .asan.o "$SOURCES")"
echo "OBJECTS_ASAN = $OBJECTS_ASAN" >> ${CONFIG_MK}

if $HAVE_GCOV; then
    OBJECTS_COV="$(c2ext .cov.o "$SOURCES")"
    echo "OBJECTS_COV = $OBJECTS_COV" >> ${CONFIG_MK}
fi

OBJECTS_DEBUG="$(c2ext .debug.o "$SOURCES")"
echo "OBJECTS_DEBUG = $OBJECTS_DEBUG" >> ${CONFIG_MK}

# Common config for all targets
CPPFLAGS="-I${SRC_TOP} $CPPFLAGS"
CFLAGS="$CFLAGS -W -Wall -Werror -Wno-error=unknown-pragmas"
CFLAGS="$CFLAGS -std=c11 -pedantic -pipe"
LIBS="$LIBS -lm"
if [ "x$(uname)" = "xDarwin" ]; then
    LDFLAGS="$LDFLAGS -Wl,-headerpad_max_install_names"
fi
config_asan
config_cocoa
config_gnu
config_i386
config_win32
config_win64
pkg_config libbsd-overlay
pkg_config libmd
pkg_config freetype2
pkg_config glesv2
pkg_config libffi
pkg_config libpng
if ${HAVE_COCOA}; then
    config_lib OPENGL -framework OpenGL 2>/dev/null
fi
if ${HAVE_WIN32}; then
    LIBS="$LIBS -lSDL2Main"
fi
config_lib OPENGL -lopengl32 -lglu32 2>/dev/null
config_lib OPENMP -fopenmp 2>/dev/null
config_define HAVE_OPENMP "${HAVE_OPENMP}"
pkg_config sdl2

# Asan config
CPPFLAGS_ASAN="$CPPFLAGS"
CFLAGS_ASAN="$CFLAGS -DDEBUG -O1 -g"
CFLAGS_ASAN="$CFLAGS_ASAN -fsanitize=address -fno-omit-frame-pointer"
LDFLAGS_ASAN="$LDFLAGS"
LOCAL_LIBS_ASAN="../../../libkc3/libkc3_asan.so"
LOCAL_LIBS_ASAN="$LOCAL_LIBS_ASAN ../../../gl/libkc3_gl_asan.so"
LOCAL_LIBS_ASAN="$LOCAL_LIBS_ASAN ../../libkc3_window_asan.so"
LOCAL_LIBS_ASAN="$LOCAL_LIBS_ASAN ../../demo/libkc3_window_demo_asan.so"
LOCAL_LIBS_ASAN="$LOCAL_LIBS_ASAN ../libkc3_window_sdl2_asan.so"
LIBS_ASAN="$LOCAL_LIBS_ASAN $LIBS"

# Coverage config
CPPFLAGS_COV="$CPPFLAGS"
CFLAGS_COV="$CFLAGS -DDEBUG -fprofile-arcs -ftest-coverage"
LDFLAGS_COV="$LDFLAGS --coverage"
LOCAL_LIBS_COV="../../../libkc3/libkc3_cov.so"
LOCAL_LIBS_COV="$LOCAL_LIBS_COV ../../../gl/libkc3_gl_cov.so"
LOCAL_LIBS_COV="$LOCAL_LIBS_COV ../../libkc3_window_cov.so"
LOCAL_LIBS_COV="$LOCAL_LIBS_COV ../../demo/libkc3_window_demo_cov.so"
LOCAL_LIBS_COV="$LOCAL_LIBS_COV ../libkc3_window_sdl2_cov.so"
LIBS_COV="$LOCAL_LIBS_COV $LIBS -lgcov"

# Debug config
CPPFLAGS_DEBUG="$CPPFLAGS"
CFLAGS_DEBUG="$CFLAGS -DDEBUG -O0 -g"
LDFLAGS_DEBUG="$LDFLAGS"
LOCAL_LIBS_DEBUG="../../../libkc3/libkc3_debug.so"
LOCAL_LIBS_DEBUG="$LOCAL_LIBS_DEBUG ../../../gl/libkc3_gl_debug.so"
LOCAL_LIBS_DEBUG="$LOCAL_LIBS_DEBUG ../../libkc3_window_debug.so"
LOCAL_LIBS_DEBUG="$LOCAL_LIBS_DEBUG ../../demo/libkc3_window_demo_debug.so"
LOCAL_LIBS_DEBUG="$LOCAL_LIBS_DEBUG ../libkc3_window_sdl2_debug.so"
LIBS_DEBUG="$LOCAL_LIBS_DEBUG $LIBS"

# Main config
DEFAULT_CFLAGS="-O2 -fPIC"
if [ "x$ENV_CFLAGS" = "x" ]; then
    CFLAGS="$CFLAGS $DEFAULT_CFLAGS"
fi
CFLAGS="$CFLAGS -DNDEBUG"
LDFLAGS="$LDFLAGS -rpath ${PREFIX}/lib"
LDFLAGS="$LDFLAGS -rpath ${BUILD_TOP}/libkc3"
LDFLAGS="$LDFLAGS -rpath ${BUILD_TOP}/gl"
LDFLAGS="$LDFLAGS -rpath ${BUILD_TOP}/window"
LDFLAGS="$LDFLAGS -rpath ${BUILD_TOP}/window/demo"
LDFLAGS="$LDFLAGS -rpath ${BUILD_TOP}/window/sdl2"
LDFLAGS="$LDFLAGS -L../../../libkc3"
LDFLAGS="$LDFLAGS -L../../../gl"
LDFLAGS="$LDFLAGS -L../../"
LDFLAGS="$LDFLAGS -L../../demo"
LDFLAGS="$LDFLAGS -L../"
LOCAL_LIBS="-lkc3"
LOCAL_LIBS="$LOCAL_LIBS -lkc3_gl"
LOCAL_LIBS="$LOCAL_LIBS -lkc3_window"
LOCAL_LIBS="$LOCAL_LIBS -lkc3_window_demo"
LOCAL_LIBS="$LOCAL_LIBS -lkc3_window_sdl2"
LIBS="$LOCAL_LIBS $LIBS"

echo "HAVE_ASAN = $HAVE_ASAN" >> ${CONFIG_MK}
echo "CPPFLAGS = $CPPFLAGS" >> ${CONFIG_MK}
echo "CFLAGS = $CFLAGS" >> ${CONFIG_MK}
echo "LDFLAGS = $LDFLAGS" >> ${CONFIG_MK}
echo "LIBS = $LIBS" >> ${CONFIG_MK}
echo >> ${CONFIG_MK}
echo "CFLAGS_ASAN = $CFLAGS_ASAN" >> ${CONFIG_MK}
echo "LDFLAGS_ASAN = $LDFLAGS_ASAN" >> ${CONFIG_MK}
echo "LIBS_ASAN = $LIBS_ASAN" >> ${CONFIG_MK}
echo >> ${CONFIG_MK}
echo "CFLAGS_COV = $CFLAGS_COV" >> ${CONFIG_MK}
echo "LDFLAGS_COV = $LDFLAGS_COV" >> ${CONFIG_MK}
echo "LIBS_COV = $LIBS_COV" >> ${CONFIG_MK}
echo >> ${CONFIG_MK}
echo "CFLAGS_DEBUG = $CFLAGS_DEBUG" >> ${CONFIG_MK}
echo "LDFLAGS_DEBUG = $LDFLAGS_DEBUG" >> ${CONFIG_MK}
echo "LIBS_DEBUG = $LIBS_DEBUG" >> ${CONFIG_MK}

update_build
update_build_prog

build_o
build_prog

if [ "x$(uname)" = "xDarwin" ]; then
    HAVE_DARWIN=true
else
    HAVE_DARWIN=false
fi
echo "HAVE_DARWIN = $HAVE_DARWIN" >> ${CONFIG_MK}

update_config_mk
update_makefile
env_reset

if ${HAVE_DARWIN}; then
    config_subdirs macos
fi
