#!/bin/sh
## kc3
## Copyright from 2022 to 2025 kmx.io <contact@kmx.io>
##
## Permission is hereby granted to use this software granted the above
## copyright notice and this permission paragraph are included in all
## copies and substantial portions of this software.
##
## THIS SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY GUARANTEE OF
## PURPOSE AND PERFORMANCE. IN NO EVENT WHATSOEVER SHALL THE
## AUTHOR BE CONSIDERED LIABLE FOR THE USE AND PERFORMANCE OF
## THIS SOFTWARE.

set -e

echo "$0"
export BUILD_TOP="$(dirname "$(dirname "$PWD")")"
export DIR="window/egl"
export SRC_TOP="$(dirname "$(dirname "$(cd "$(dirname "$0")" && pwd)")")"

CONFIG_H_PREFIX=LIBKC3_WINDOW_EGL_

. "${SRC_TOP}/config.subr"

LIB=libkc3_window_egl.la
LIB_ASAN=libkc3_window_egl_asan.la
LIB_COV=libkc3_window_egl_cov.la
LIB_DEBUG=libkc3_window_egl_debug.la

echo "LIB = $LIB" >> ${CONFIG_MK}
echo "LIB_ASAN = $LIB_ASAN" >> ${CONFIG_MK}
echo "LIB_COV = $LIB_COV" >> ${CONFIG_MK}
echo "LIB_DEBUG = $LIB_DEBUG" >> ${CONFIG_MK}

# Common config for all targets
CPPFLAGS="-I../.. $CPPFLAGS"
CFLAGS="$CFLAGS -W -Wall -Werror -std=c11 -pedantic -pipe"
LDFLAGS="--shared ${LDFLAGS}"
LIBS="$LIBS -rpath ${PREFIX}/lib"
config_asan
config_gnu
config_i386
config_android
config_cocoa
pkg_config libbsd-overlay
pkg_config libffi
pkg_config libmd
pkg_config egl
pkg_config freetype2
pkg_config gl

. "${SRC_DIR}/sources.sh"

OBJECTS="$(c2ext .main.lo "$SOURCES")"
OBJECTS_ASAN="$(c2ext .asan.lo "$SOURCES")"
OBJECTS_COV="$(c2ext .cov.lo "$SOURCES")"
OBJECTS_DEBUG="$(c2ext .debug.lo "$SOURCES")"

echo "OBJECTS = $OBJECTS" >> ${CONFIG_MK}
echo "OBJECTS_ASAN = $OBJECTS_ASAN" >> ${CONFIG_MK}
echo "OBJECTS_COV = $OBJECTS_COV" >> ${CONFIG_MK}
echo "OBJECTS_DEBUG = $OBJECTS_DEBUG" >> ${CONFIG_MK}

# Address Sanitizer config
CPPFLAGS_ASAN="$CPPFLAGS"
CFLAGS_ASAN="$CFLAGS -O1 -fno-omit-frame-pointer -fsanitize=address -fsanitize-address-use-after-scope"
LDFLAGS_ASAN="$LDFLAGS"
LIBS_LOCAL_ASAN="../../libkc3/libkc3_asan.la ../../gl/libkc3_gl_asan.la ../libkc3_window_asan.la"
LIBS_ASAN="$LIBS_LOCAL_ASAN $LIBS"

echo "CPPFLAGS_ASAN = $CPPFLAGS_ASAN" >> ${CONFIG_MK}
echo "CFLAGS_ASAN = $CFLAGS_ASAN" >> ${CONFIG_MK}
echo "LDFLAGS_ASAN = $LDFLAGS_ASAN" >> ${CONFIG_MK}
echo "LIBS_ASAN = $LIBS_ASAN" >> ${CONFIG_MK}

# Coverage config
CPPFLAGS_COV="$CPPFLAGS"
CFLAGS_COV="$CFLAGS -ftest-coverage -fprofile-arcs"
LDFLAGS_COV="$LDFLAGS"
LIBS_LOCAL_COV="../../libkc3/libkc3_cov.la ../../gl/libkc3_gl_cov.la ../libkc3_window_cov.la"
LIBS_COV="$LIBS_LOCAL_COV $LIBS -lgcov"

echo "CPPFLAGS_COV = $CPPFLAGS_COV" >> ${CONFIG_MK}
echo "CFLAGS_COV = $CFLAGS_COV" >> ${CONFIG_MK}
echo "LDFLAGS_COV = $LDFLAGS_COV" >> ${CONFIG_MK}
echo "LIBS_COV = $LIBS_COV" >> ${CONFIG_MK}

# Debug config
CPPFLAGS_DEBUG="$CPPFLAGS"
CFLAGS_DEBUG="$CFLAGS -DDEBUG -O0 -g"
LDFLAGS_DEBUG="$LDFLAGS"
LIBS_LOCAL_DEBUG="../../libkc3/libkc3_debug.la ../../gl/libkc3_gl_debug.la ../libkc3_window_debug.la"
LIBS_DEBUG="$LIBS_LOCAL_DEBUG $LIBS"

echo "CPPFLAGS_DEBUG = $CPPFLAGS_DEBUG" >> ${CONFIG_MK}
echo "CFLAGS_DEBUG = $CFLAGS_DEBUG" >> ${CONFIG_MK}
echo "LDFLAGS_DEBUG = $LDFLAGS_DEBUG" >> ${CONFIG_MK}
echo "LIBS_DEBUG = $LIBS_DEBUG" >> ${CONFIG_MK}

# Main config
LIBS_LOCAL="../../libkc3/libkc3.la ../../gl/libkc3_gl.la ../libkc3_window.la"
LIBS="$LIBS_LOCAL $LIBS"

echo "CPPFLAGS = $CPPFLAGS" >> ${CONFIG_MK}
echo "CFLAGS = $CFLAGS" >> ${CONFIG_MK}
echo "LDFLAGS = $LDFLAGS" >> ${CONFIG_MK}
echo "LIBS = $LIBS" >> ${CONFIG_MK}

if [ "x$HAVE_DRM" = "x" ]; then
    if pkg-config gbm && pkg-config libdrm && pkg-config libinput; then
        HAVE_DRM=true
    else
        HAVE_DRM=false
    fi
else
    bool HAVE_DRM "$HAVE_DRM"
fi
echo "HAVE_DRM = $HAVE_DRM" >> ${CONFIG_MK}
echo "#define HAVE_DRM $HAVE_DRM" >> ${CONFIG_H}

if [ "x$HAVE_XCB" = "x" ]; then
    if pkg-config xcb; then
        HAVE_XCB=true
    else
        HAVE_XCB=false
    fi
else
    bool HAVE_XCB "$HAVE_XCB"
fi
echo "HAVE_XCB = $HAVE_XCB" >> ${CONFIG_MK}
echo "#define HAVE_XCB $HAVE_XCB" >> ${CONFIG_H}

update_config_h

SUBDIRS=

if ${HAVE_ANDROID}; then
    SUBDIRS="$SUBDIRS android"
fi
if ${HAVE_DRM}; then
    SUBDIRS="$SUBDIRS drm"
fi
if ${HAVE_XCB}; then
    SUBDIRS="$SUBDIRS xcb"
fi

update_build_c
update_build_lib

build_lo_c
build_lib

update_config_mk

if [ "x$(dirname "$0")" != "x." ]; then
    cp ${SRC_DIR}/Makefile ${SRC_DIR}/sources.mk ./
fi

env_reset

config_subdirs $SUBDIRS
